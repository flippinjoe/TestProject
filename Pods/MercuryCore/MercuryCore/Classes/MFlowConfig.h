//
//  MFlowConfig.h
//  MercuryCoreDev
//
//  Created by Stephen Tallent on 5/11/09.
//  Copyright 2009 MercuryIntermedia All rights reserved. Sweet Tea.
//

#import <Foundation/Foundation.h>


#ifndef IS_IPAD
#define IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#endif

#ifndef IS_RETINA
#define IS_RETINA [[UIScreen mainScreen] scale] > 1
#endif

#ifndef IS_4IN
#define IS_4IN (!IS_IPAD && IS_RETINA && [[UIScreen mainScreen] bounds].size.height == 568.f)
#endif


extern const struct MFlowImpKeys {
    __unsafe_unretained NSString *iphone;                     // iOS 1x
    __unsafe_unretained NSString *iphone2x;                   // iOS retina
    __unsafe_unretained NSString *iphone2x4;                  // iOS 4in.
    __unsafe_unretained NSString *ipad;                       // iPad
    __unsafe_unretained NSString *ipad2x;                     // iPad retina
} MFlowImpKeys;

extern const struct MFlowConfigKeys {
    __unsafe_unretained NSString *productKey;               // eg. "showtime"
    __unsafe_unretained NSString *stagingKey;               // eg. @NO
    __unsafe_unretained NSString *deviceIDKey;              // This gets autogenerated now.  But we may want the option to override later
    
    __unsafe_unretained NSString *liveAppURLKey;            // eg. "showtime.mercuryintermedia.net"
    __unsafe_unretained NSString *stagingAppURLKey;         // eg. "showtime.staging.mercury.io/"
    
    __unsafe_unretained NSString *distributionIDKey;        // eg. @9
    __unsafe_unretained NSString *implementationKey;        // eg. "HGVA2X"
    __unsafe_unretained NSString *resizedImageTypeIDKey;    // eg. @1029
} MFlowConfigKeys;


/**
 *  These keys are used for the new settings.bundle
 *  preferences that's dynamically added to the app at build time
 **/
extern const struct MFlowConfigSettingsKeys {
    __unsafe_unretained NSString *clearCachesKey;           // Determines whether to flush the cachesDir on next launch
    __unsafe_unretained NSString *stagingEnabledKey;        // Enable Staging
} MFlowConfigSettingsKeys;


@interface MFlowConfig : NSObject

/** @name Initialize **/

/**
 *  Use the MFlowConfigKeys above as the keys for this config
 *  You can optionally set the properties directly below
 *  @param config - A set of key-values
 **/
+ (void)initMFlowWithConfig:(NSDictionary *)config;

+ (MFlowConfig *)sharedInstance;

/** @name Properties **/
@property (nonatomic, copy) NSString *mflowProdAppURL;
@property (nonatomic, copy) NSString *mflowStagingAppURL;

/**
 The current device ID.
 @returns The device ID.
 */
@property (nonatomic, copy) NSString *deviceID;

/**
 The Resized Image implementation key.
 @returns String that specifies an implementation for Resized Images.
 */
@property (nonatomic, copy) NSString *impKey;

/**
 The start time of the application.
 @returns The date that the MFlowConfig was initialized.
 */
@property (nonatomic, strong) NSDate *appStartDate;

/**
 The application Distribution ID.
 @returns The distribution ID.
 */
@property (nonatomic, assign) NSInteger distributionID;
@property (nonatomic, assign) NSInteger resizedImageTypeID;

@property (nonatomic, assign, getter = usingStaging) BOOL stagingEnabled;
@property (nonatomic, assign, readonly, getter = isInitialized) BOOL initialized;

@property (nonatomic, strong, readonly) NSOperationQueue *serviceOpsQueue;

/**
 The application's MFlow url.  This changes based on STAGING flag.
 @returns appliction url string.
 */
+ (NSString *)mflowAppURL;


/**
 Deletes MFlowContainer caches from the application's document store.
 @param Array of container IDs to delete.
 */
+ (void)removeMFlowContainerCaches:(NSArray *)containerIDs;

/**
 *  Convenience for dumping the current configuration
 **/
+ (void)dump;

@end







@interface MFlowConfig (Deprecated)


/**
 Convienence initializer.
 Used when the default Type ID for Resized Images is acceptable.
 */
+ (void)initMFlow:(NSString *)pKey
       stagingURL:(NSString *)sURL
          liveURL:(NSString *)lURL
     distribution:(NSInteger)dist
           impKey:(NSString *)impKey __attribute__((deprecated("Use initMFlowWithConfig: instead")));

+ (void)initMFlow:(NSString *)pKey
       stagingURL:(NSString *)sURL
          liveURL:(NSString *)lURL
     distribution:(NSInteger)dist
           impKey:(NSString *)ik
       useStaging:(BOOL)useStaging __attribute__((deprecated("Use initMFlowWithConfig: instead")));

/**
 Initializes MFlow
 @param pKey Product Key string.
 @param sURL Staging url. Used if STAGING flag is set.
 @param lURL MFlow url for live applications.
 @param dist Distribution number for application
 @param impKey String that specifies an implementation for Resized Images, i.e. iPad, HVGA, etc.
 @param riTypeID Integer specifiying the MFLow TypeID for a Resized Images.
 */
+ (void)initMFlow:(NSString *)pKey
       stagingURL:(NSString *)sURL
          liveURL:(NSString *)lURL
     distribution:(NSInteger)dist
           impKey:(NSString *)ik
resizedImageTypeID:(NSInteger)riTypeID __attribute__((deprecated("Use initMFlowWithConfig: instead")));


+ (void)initMFlow:(NSString *)pKey
       stagingURL:(NSString *)sURL
          liveURL:(NSString *)lURL
     distribution:(NSInteger)dist
           impKey:(NSString *)ik
resizedImageTypeID:(NSInteger)riTypeID
       useStaging:(BOOL)useStaging __attribute__((deprecated("Use initMFlowWithConfig: instead")));

/** @name Deprecated Properties **/
/**
 *  For all the getter methods below you should use the properties instead
 **/
+ (NSInteger)distributionID __attribute__((deprecated("Read from property instead")));
+ (NSString*)deviceID __attribute__((deprecated("Read from property instead")));
+ (NSDate *)appStartDate __attribute__((deprecated("Read from property instead")));
+ (NSString *)impKey __attribute__((deprecated("Read from property instead")));

/**
 The Resized Image TypeID
 @returns The MFlow TypeID that is used for resized images.
 */
+ (NSInteger)resizedImageTypeID __attribute__((deprecated("Read from property instead")));
+ (BOOL)usingStaging __attribute__((deprecated("Read from property instead")));

+ (NSString *)getMFlowClassNameByID:(NSString *)clsID __attribute__((deprecated("Why is this even here")));


+ (void)addOpToServicesQueue:(NSOperation *)op __attribute__((deprecated("Add to the servicesOperationQueue property directly")));
+ (void)setMaxConcurrentOperationsForQueue:(NSInteger)num __attribute__((deprecated("Set on the servicesOperationQueue property directly")));

@end